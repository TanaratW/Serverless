// src/services/todoService.ts

import axios from "axios";
import type { Todo, CreateTodoPayload } from "../../types/Todo";

// ðŸ’¡ baseURL à¸ªà¸³à¸«à¸£à¸±à¸š read todos
const TODO_READ_SERVICE = "http://localhost/lists-service";
// ðŸ’¡ baseURL à¸ªà¸³à¸«à¸£à¸±à¸š create/update/delete
const TODO_WRITE_SERVICE = "http://localhost/api";

export const getTodos = () =>
  axios.get<Todo[]>(`${TODO_READ_SERVICE}/todos-get`);

export const getTodoById = (id: string) =>
  axios.get<Todo>(`${TODO_READ_SERVICE}/todos/${id}`);

// âœ… POST à¹„à¸›à¸¢à¸±à¸‡ microservice à¸—à¸µà¹ˆà¸£à¸±à¸šà¸œà¸´à¸”à¸Šà¸­à¸š create
export const createTodo = (todo: CreateTodoPayload) =>
  axios.post<Todo>(`${TODO_WRITE_SERVICE}/todos`, todo);

// âœ… PUT/DELETE à¹„à¸›à¸¢à¸±à¸‡ microservice à¸—à¸µà¹ˆà¸£à¸±à¸šà¸œà¸´à¸”à¸Šà¸­à¸š update/delete
export const updateTodo = (id: string, todo: Todo) =>
  axios.put<Todo>(`${TODO_WRITE_SERVICE}/todos/${id}`, todo);

export const deleteTodo = (id: string) =>
  axios.delete<Todo>(`${TODO_WRITE_SERVICE}/todos/${id}`);

export const getCompletedTodos = () =>
  axios.get<Todo[]>(`${TODO_WRITE_SERVICE}/todos/completed`);

export const getIncompleteTodos = () =>
  axios.get<Todo[]>(`${TODO_WRITE_SERVICE}/todos/incomplete`);
